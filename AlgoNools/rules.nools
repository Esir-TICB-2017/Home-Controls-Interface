//	*******************************************************************
//	Fichier comportant toutes les règles destinées au raisonneur
//	*******************************************************************

//import("./Objets.js");

// 		============================================================
//		Règles pour gérer le changement de moment de la journée
//		1ère règle pour que ce soit bien pris en compte pour la suite
//			-> Matin dans salle de bain, salle, chambre
//			-> Journée dans salle de bain, salle, chambre
//			-> Soir dans salle de bain, salle, chambre
//			-> Nuit dans salle de bain, salle, chambre
//		============================================================



define Moment {
	value : null,

	constructor : function(value){
		this.value = value;
	},

	setValue : function(value){
		this.value = value;
	}, 

	getValue : function(){
		return this.value;
	}
}

define Consigne {
	valueSdb     : null,
	valueSalle   : null,
	valueChambre : null,
	mesure       : null,
	tempSuf      : 22,
	lumSuf       : 500,
	tempFort     : 25,
	lumFort      : 1000,
	jourSuf      : 100,
	co2 		 : 300,

	constructor : function(val1, val2, val3, mesure){
		this.valueSdb     = val1;
		this.valueSalle   = val2;
		this.valueChambre = val3;
		this.mesure       = mesure;
	},

	getValue : function(piece){
		switch(piece){
			case 'sdb':
				return this.valueSdb;
				break;
			case 'salle':
				return this.valueSalle;
				break;
			case 'chambre':
				return this.valueChambre;
				break;
		}
	},

	setValue : function(val){
		this.valueSdb = val;
		this.valueSalle = val;
		this.valueChambre = val;

	},

	getMesure : function(){
		return this.mesure;
	},

	getValueLumSuf : function(){
		return this.lumSuf;
	},

	getValueTempSuf : function(){
		return this.tempSuf;
	},

	getValueLumFort : function(){
		return this.lumFort;
	},

	getValueTempFort : function(){
		return this.tempFort;
	},

	getValueJourSuf : function(){
		return this.jourSuf;
	}
}

define Chauffage {
	value : null,
	id    : null,
	place : null,
	etat  : null,
 	
 	constructor : function(value, id, place){
		this.id    = id;
		this.value = value;
		this.place = place;
		this.etat  = 'off';
 	},

 	getId : function(){
 		return this.id;
 	},
 	getValue : function(){
 		return this.value;
 	},
 	getPlace : function(){
 		return this.place;
 	},
 	up : function(){
		this.value += 1;
	},
	down : function(){
		this.value -= 1;
	},
	getEtat : function(){
		return this.etat;
	},
	setEtat : function(etat){
		this.etat = etat;
	},
	setValue : function(valeur){
	this.value=valeur;
	},
	add : function(valeur){
	this.value+=valeur;
	}
}

define CaptTemperature {
	place : null,
	value : null,

	constructor : function(value, place){
		this.place = place;
		this.value = value;
	},


	getPlace : function(){
		return this.place;
	},

	getValue : function(){
		return this.value;
	},

	setValue : function(value){
		this.value = value;
	}
}

define Volet {
	value : null,
	id    : null,
	place : null,

	constructor : function(value, id, place){
		this.value = value;
		this.id    = id;
		this.place = place;
	},

	getValue : function(){
		return this.value;
	},

	getId : function(){
		return this.id;
	},

	getPlace : function(){
		return this.place;
	},

	up : function(){
		this.value = 'up';
		//api.up(this.id)
	},

	down : function(){
		this.value = 'down';
		//api.down(this.id)
	}
}


define CaptLuminosite {
	place : null,
	value : null,

	constructor : function(value, place){
		this.place = place;
		this.value = value;
	},

	getPlace : function(){
		return this.place;
	},

	getValue : function(){
		return this.value;
	},

	setValue : function(value){
		this.value = value;
	}
}

define Lumiere {
	value : null,
	id    : null,
	place : null,

	constructor : function(value, id, place){
		this.value = value;
		this.id    = id;
		this.place = place;
	},
	
	getValue : function(){
		return this.value;
	},

	getId : function(){
		return this.id;
	},

	getPlace : function(){
		return this.place;
	},

	up : function(){
		this.value = 'up';
		//api.up(this.id)
	},

	down : function(){
		this.value = 'down';
		//api.down(this.id)
	}
}

define CaptCO2 {
	value : null,

	constructor : function(value){
		this.value = value;
	},

	getValue : function(){
		return this.value;
	},

	setValue : function(value){
		this.value = value;
	}
}


define VMC {
	value : null,

	constructor : function(value){
		this.value = value;
	},

	setV1 : function(){
		this.value = 1;
	}, 

	setV2 : function(){
		this.value = 2;
	},

	getValue : function(){
		return this.value;
	}
}


rule matin {
	when {
		moment       : Moment moment.getValue() == 'matin';
		consigneTemp : Consigne consigneTemp.getMesure() == 'temperature';
		consigneLum  : Consigne consigneLum.getMesure() == 'luminosite';
	}
	then {
		modify(consigneTemp, function(){consigneTemp.valueSdb   = consigne_temperature + 2;});
		modify(consigneLum, function(){consigneLum.valueChambre = consigne_temperature -150;});
	}
}

rule jour {
	when {
		moment       : Moment moment.getValue() == 'jour';
		consigneTemp : Consigne consigneTemp.getMesure() == 'temperature';
	}
	then {
		modify(consigneTemp, function(){consigneTemp.valueSdb     = consigne_temperature - 2;});
		modify(consigneTemp, function(){consigneTemp.valueSalle   = consigne_temperature - 1;});
		modify(consigneTemp, function(){consigneTemp.valueChambre = consigne_temperature - 2;});
	}
}

rule soir {
	when {
		moment       : Moment moment.getValue() == 'soir';
		consigneTemp : Consigne consigneTemp.getMesure() == 'temperature';
		consigneLum  : Consigne consigneLum.getMesure() == 'luminosite';
	}
	then {
		modify(consigneTemp, function(){consigneTemp.valueSdb     = consigne_temperature + 1;});
		modify(consigneTemp, function(){consigneTemp.valueSalle   = consigne_temperature + 1;});
		modify(consigneTemp, function(){consigneTemp.valueChambre = consigne_temperature - 1;});
		modify(consigneLum, function(){consigneLum.valueChambre   = consigne_luminosite - 150;});
	}
}

rule nuit {
	when {
		moment       : Moment moment.getValue() == 'soir';
		consigneTemp : Consigne consigneTemp.getMesure() == 'temperature';
		consigneLum  : Consigne consigneLum.getMesure() == 'luminosite';
	}
	then {
		modify(consigneTemp, function(){consigneTemp.valueSdb     = consigne_temperature - 2;});
		modify(consigneTemp, function(){consigneTemp.valueSalle   = consigne_temperature - 2;});
		modify(consigneLum, function(){consigneLum.valueSalle     = consigne_luminosite - 150;});
		modify(consigneTemp, function(){consigneTemp.valueChambre = consigne_temperature - 1;});
		modify(consigneLum, function(){consigneLum.valueChambre   = consigne_luminosite - 150;});
	}
}


// 		============================================================
//		Règles pour gérer la salle de bain
//			-> Chauffage
//		============================================================

/*		********				Chauffage				 ******** */
rule SDBchauffageUp {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'sdb';
		temperature : CaptTemperature temperature.getPlace() == 'sdb' && temperature.getValue() < (consigne.getValue('sdb') - 0.5);
	}
	then{
		modify(chauffage, function(){chauffage.setEtat('on');});
		modify(chauffage, function(){chauffage.add(1);});
	}
}

rule SDBchauffageDown {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'sdb';
		temperature : CaptTemperature temperature.getPlace() == 'sdb' && temperature.getValue() > (consigne.getValue('sdb') + 0.5);
	}
	then{
		modify(chauffage, function(){chauffage.setEtat('on');});
		modify(chauffage, function(){chauffage.add(1);});
	}
}


// 		============================================================
//		Règles pour gérer la chambre
//			-> Chauffage
//			-> Lumière
//			-> Volet
//		============================================================

/*		********				Chauffage				 ******** */
rule ChambreChauffageUp1 {
	when {
		consigne       : Consigne consigne.getMesure() == 'temperature';
		temperatureInt : CaptTemperature temperatureInt.getPlace() == 'chambre' 	&& temperatureInt.getValue() < (consigne.getValue('chambre') - 1);
		volet          : Volet volet.getPlace() == 'chambre'						&& volet.getValue() == 'down';
		temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() >= consigne.getValueTempSuf();
		lum            : CaptLuminosite lum.getPlace() == 'exterieur' 				&& lum.getValue() >= consigne.getValueLumSuf();
	}
	then {
		modify(volet, function(){volet.up();});
	}
}

rule ChambreChauffageUp2 {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'chambre';
		temperature : CaptTemperature temperature.getPlace() == 'chambre' 				&& temperature.getValue() < (consigne.getValue('chambre') - 1);
		volet       : Volet volet.getPlace() == 'chambre' 								&& volet.getValue() == 'up';
		or( temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() < consigne.getValueTempSuf(),
			luminositeExt : CaptLuminosite luminositeExt.getPlace() == 'exterieur' 		&& luminositeExt.getValue() < consigne.getValueLumSuf());
	} 
	then {
		modify(chauffage, function(){chauffage.setEtat('on');});
		modify(chauffage, function(){chauffage.up();});
	}
}

rule ChambreChauffageDown1 {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'chambre' 			&& chauffage.getEtat() == 'on';
		temperature : CaptTemperature temperature.getPlace() == 'chambre' 	&& temperature.getValue() > (consigne.getValue('chambre') + 1);
	}
	then {
		modify(chauffage, function(){chauffage.setEtat('off');});
	}
}

rule ChambreChauffageDown2 {
	when {
		consigne       : Consigne consigne.getMesure() == 'temperature';
		chauffage      : Chauffage chauffage.getPlace() == 'chambre' 				&& chauffage.getEtat() == 'off';
		temperature    : CaptTemperature temperature.getPlace() == 'chambre' 		&& temperature.getValue() > (consigne.getValue('chambre') + 1);
		volet          : Volet volet.getPlace() == 'chambre' 						&& volet.getValue() == 'up';
		luminosite     : CaptLuminosite luminosite.getPlace() == 'exterieur' 		&& luminosite.getValue() > consigne.getValueLumFort();
		temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() > consigne.getValueTempFort();
	}
	then {
		modify(volet, function(){volet.down();});
	}
}

/*		********				Luminosité				 ******** */
rule ChambreLuminositeUp1 {
	when {
		consigne   : Consigne consigne.getMesure() == 'luminosite';
		volet      : Volet volet.getPlace() == 'chambre' 				&& volet.getValue() == 'up';
		lumiere    : Lumiere lumiere.getPlace() == 'chambre' 			&& lumiere.getValue() == 'down';
		luminosite : CaptLuminosite luminosite.getPlace() == 'chambre' 	&& luminosite.getValue() < (consigne.getValue('chambre') - 25);
	}
	then {
		modify(lumiere, function(){lumiere.up();});
	}
}

rule ChambreLuminositeUp2 {
	when {
		consigne      : Consigne consigne.getMesure() == 'luminosite';
		luminosite    : CaptLuminosite luminosite.getPlace() == 'chambre' 		&& luminosite.getValue() < (consigne.getValue('chambre') - 25);
		volet         : Volet volet.getPlace() == 'chambre' 					&& volet.getValue() == 'down';
		luminositeExt : CaptLuminosite luminositeExt.getPlace() == 'exterieur' 	&& luminositeExt.getValue() > consigne.getValueJourSuf();
	}
	then {
		modify(volet, function(){volet.up();});
	}
}

rule ChambreLuminositeDown {
	when {
		consigne   : Consigne consigne.getMesure() == 'luminosite';
		luminosite : CaptLuminosite luminosite.getPlace() == 'chambre' 	&& luminosite.getValue() > (consigne.getValue('chambre') + 25);
		lumiere    : Lumiere lumiere.getPlace() == 'chambre' 			&& lumiere.getValue() == 'up';
		}
	then {
		modify(lumiere, function(){lumiere.down();});
	}
}


// 		============================================================
//		Règles pour gérer la salle
//			-> Chauffage
//			-> Lumière
//			-> Volet
//			-> VMC
//		============================================================

/*		********				Chauffage				 ******** */
rule SalleChauffageUp1 {
	when {
		consigne       : Consigne consigne.getMesure() == 'temperature';
		temperatureInt : CaptTemperature temperatureInt.getPlace() == 'salle' 		&& temperatureInt.getValue() < (consigne.getValue('salle') - 1);
		volet          : Volet volet.getPlace() == 'salle' 							&& volet.getValue() == 'down';
		temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() >= consigne.getValueTempSuf();
		lum            : CaptLuminosite lum.getPlace() == 'exterieur' 				&& lum.getValue() >= consigne.getValueLumSuf();
	}
	then {
		modify(volet, function(){volet.up();});
	}
}

rule SalleChauffageUp2 {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'salle';
		temperature : CaptTemperature temperature.getPlace() == 'salle' 				&& temperature.getValue() < (consigne.getValue('salle') - 1);
		volet       : Volet volet.getPlace() == 'salle' 								&& volet.getValue() == 'up';
		or( temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() < consigne.getValueTempSuf(),
			luminositeExt : CaptLuminosite luminositeExt.getPlace() == 'exterieur' 		&& luminositeExt.getValue() < consigne.getValueLumSuf());
	} 
	then {
		modify(chauffage, function(){chauffage.setEtat('on');});
		modify(chauffage, function(){chauffage.up();});
	}
}

rule SalleChauffageDown1 {
	when {
		consigne    : Consigne consigne.getMesure() == 'temperature';
		chauffage   : Chauffage chauffage.getPlace() == 'salle' 			&& chauffage.getEtat() == 'on';
		temperature : CaptTemperature temperature.getPlace() == 'salle' 	&& temperature.getValue() > (consigne.getValue('salle') + 1);
	}
	then {
		modify(chauffage, function(){chauffage.setEtat('off');});
	}
}

rule SalleChauffageDown2 {
	when {
		consigne       : Consigne consigne.getMesure() == 'temperature';
		chauffage      : Chauffage chauffage.getPlace() == 'salle' 					&& chauffage.getEtat() == 'off';
		temperature    : CaptTemperature temperature.getPlace() == 'salle'			&& temperature.getValue() > (consigne.getValue('salle') + 1);
		volet          : Volet volet.getPlace() == 'salle' 							&& volet.getValue() == 'up';
		luminosite     : CaptLuminosite luminosite.getPlace() == 'exterieur' 		&& luminosite.getValue() > consigne.getValueLumFort();
		temperatureExt : CaptTemperature temperatureExt.getPlace() == 'exterieur' 	&& temperatureExt.getValue() > consigne.getValueTempFort();
	}
	then {
		modify(volet, function(){volet.down();});
	}
}


/*		********				Luminosité				 ******** */
rule SalleLuminositeUp1 {
	when {
		consigne   : Consigne consigne.getMesure() == 'luminosite';
		volet      : Volet volet.getPlace() == 'salle' 					&& volet.getValue() == 'up';
		lumiere    : Lumiere lumiere.getPlace() == 'salle' 				&& lumiere.getValue() == 'down';
		luminosite : CaptLuminosite luminosite.getPlace() == 'salle' 	&& luminosite.getValue() < (consigne.getValue('salle') - 25);
	}
	then {
		modify(lumiere, function(){lumiere.up();});
	}
}

rule SalleLuminositeUp2 {
	when {
		consigne      : Consigne consigne.getMesure() == 'luminosite';
		luminosite    : CaptLuminosite luminosite.getPlace() == 'salle' 		&& luminosite.getValue() < (consigne.getValue('salle') - 25);
		volet         : Volet volet.getPlace() == 'salle' 						&& volet.getValue() == 'down';
		luminositeExt : CaptLuminosite luminositeExt.getPlace() == 'exterieur' 	&& luminositeExt.getValue() > consigne.getValueJourSuf();
	}
	then {
		modify(volet, function(){volet.up();});
	}
}

rule SalleLuminositeDown {
	when {
		consigne   : Consigne consigne.getMesure() == 'luminosite';
		luminosite : CaptLuminosite luminosite.getPlace() == 'salle' 	&& luminosite.getValue() > (consigne.getValue('salle') + 25);
		lumiere    : Lumiere lumiere.getPlace() == 'salle' 				&& lumiere.getValue() == 'up';
		}
	then {
		modify(lumiere, function(){lumiere.down();});
	}
}


/*		********				VMC  				 ******** */
rule SalleAugVMC {
	when {
		consigne : Consigne consigne.getMesure() == 'co2';
		co2      : CaptCO2 co2.getValue() > (consigne.co2 + 25);
		vmc      : VMC vmc.getValue() == 1;
	}
	then {
		modify(vmc, function(){vmc.setV2();});
	}
}

rule SalleDimVMC {
	when {
		consigne : Consigne consigne.getMesure() == 'co2';
		co2      : CaptCO2 co2.getValue() < (consigne.co2 - 25);
		vmc      : VMC vmc.getValue() == 2;
	}
	then {
		modify(vmc, function(){vmc.setV1();});
	}
}

// 		============================================================
//		Règles divers
//			-> Fermeture des volets quand il fait nuit
//		============================================================
rule VoletNuitDown {
	when {
		luminosite : CaptLuminosite luminosite.getPlace() == 'exterieur';
		consigne   : Consigne consigne.getMesure() == 'luminosite' 			&& (luminosite.getValue() < consigne.getValueJourSuf());
		volet      : Volet;
	}
	then {
		modify(volet, function(){volet.down();});
	}
}